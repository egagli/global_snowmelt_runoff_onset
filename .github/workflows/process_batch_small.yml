name: Process Batch Small (≤256 tiles)

on:
  workflow_dispatch:
    inputs:
      which_tiles_to_process:
        description: 'Which tiles to process'
        required: false
        default: 'unprocessed'
        type: choice
        options:
        - all
        - processed
        - failed
        - unprocessed
        - unprocessed_and_failed
        - unprocessed_and_failed_weather_stations
      how_many:
        description: 'How many tiles to process (max 256 for this workflow)'
        required: false
        default: '10'
        type: string
      config_file:
        description: 'Config file to use (e.g., global_config_v9.txt)'
        required: false
        default: 'global_config_v9.txt'
        type: string
      batch_index:
        description: 'Batch index for reusable workflow calls (keep as -1)'
        required: false
        default: '-1'
        type: string

  # Must duplicate inputs for workflow_call (https://github.com/orgs/community/discussions/39357)
  workflow_call:
    inputs:
      which_tiles_to_process:
        type: string
        required: true
      how_many:
        type: string
        required: true
      config_file:
        type: string
        required: true
      batch_index:
        type: string
        required: false
        default: '-1'

env:
  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}

jobs:
  generate-tile-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-tiles.outputs.matrix }}
      tile-count: ${{ steps.get-tiles.outputs.count }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        miniforge-variant: Miniforge3
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: global_snowmelt_runoff_onset_actions
        environment-file: environment_github_actions.yml
        
    - name: Install package
      shell: bash -l {0}
      run: |
        pip install -e .
        
    - name: Get tiles for batch processing
      id: get-tiles
      shell: bash -l {0}
      run: |
        BATCH_INDEX="${{ inputs.batch_index }}"
        
        COUNT=$(python processing/scripts/get_tiles_for_batch.py \
          --config-file ${{ inputs.config_file }} \
          --which-tiles ${{ inputs.which_tiles_to_process }} \
          --how-many ${{ inputs.how_many }} \
          --batch-index $BATCH_INDEX \
          --output count)
        echo "count=$COUNT" >> $GITHUB_OUTPUT
        
        # Check if user should use Large Batch workflow instead (only for workflow_dispatch)
        if [ "$BATCH_INDEX" = "-1" ] && [ $COUNT -gt 256 ]; then
          echo "⚠️  WARNING: You're trying to process $COUNT tiles, but this workflow is limited to 256 tiles."
          echo "🔄 Consider using the 'Process Batch Large' workflow instead for better performance."
          echo "❌ This workflow will fail due to GitHub Actions matrix job limits."
          exit 1
        fi
        
        MATRIX=$(python processing/scripts/get_tiles_for_batch.py \
          --config-file ${{ inputs.config_file }} \
          --which-tiles ${{ inputs.which_tiles_to_process }} \
          --how-many ${{ inputs.how_many }} \
          --batch-index $BATCH_INDEX \
          --output json)
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
        
        echo "✅ Processing $COUNT tiles with Small Batch workflow"

  process-tiles:
    needs: generate-tile-matrix
    if: fromJson(needs.generate-tile-matrix.outputs.tile-count) > 0
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        tile: ${{ fromJson(needs.generate-tile-matrix.outputs.matrix) }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        miniforge-variant: Miniforge3
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: global_snowmelt_runoff_onset_actions
        environment-file: environment_github_actions.yml
        
    - name: Install package
      shell: bash -l {0}
      run: |
        pip install -e .
        
    - name: Process tile
      shell: bash -l {0}
      run: |
        python processing/scripts/process_single_tile.py \
          --tile-row ${{ matrix.tile.row }} \
          --tile-col ${{ matrix.tile.col }} \
          --config-file ${{ inputs.config_file }}
          
    - name: Upload tile result as artifact
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: batch-tile-result-${{ matrix.tile.row }}-${{ matrix.tile.col }}
        path: processing/tile_data/github_workflow_results/tile_${{ matrix.tile.row }}_${{ matrix.tile.col }}_*.csv
        retention-days: 30
        if-no-files-found: ignore
