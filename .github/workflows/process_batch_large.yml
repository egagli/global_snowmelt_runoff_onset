name: Process Batch Large (>256 tiles)

on:
  workflow_dispatch:
    inputs:
      which_tiles_to_process:
        description: 'Which tiles to process'
        required: false
        default: 'unprocessed'
        type: choice
        options:
        - all
        - processed
        - failed
        - unprocessed
        - unprocessed_and_failed
        - unprocessed_and_failed_weather_stations
      how_many:
        description: 'How many tiles to process (use Small Batch for â‰¤256)'
        required: false
        default: '1000'
        type: string
      config_file:
        description: 'Config file to use (e.g., global_config_v9.txt)'
        required: false
        default: 'global_config_v9.txt'
        type: string

env:
  AZURE_STORAGE_SAS_TOKEN: ${{ secrets.AZURE_STORAGE_SAS_TOKEN }}
  AZURE_STORAGE_ACCOUNT: ${{ secrets.AZURE_STORAGE_ACCOUNT }}

permissions:
  contents: write

jobs:
  generate-batch-matrix:
    runs-on: ubuntu-latest
    outputs:
      batch-matrix: ${{ steps.get-batches.outputs.matrix }}
      total-tiles: ${{ steps.get-batches.outputs.total-tiles }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Miniforge
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        miniforge-variant: Miniforge3
        channels: conda-forge,defaults
        channel-priority: true
        activate-environment: global_snowmelt_runoff_onset_actions
        environment-file: environment_github_actions.yml
        
    - name: Install package
      shell: bash -l {0}
      run: |
        pip install -e .
        
    - name: Generate batch matrix
      id: get-batches
      shell: bash -l {0}
      run: |
        # Get batch info
        BATCH_INFO=$(python processing/scripts/get_tiles_for_batch.py \
          --config-file ${{ github.event.inputs.config_file }} \
          --which-tiles ${{ github.event.inputs.which_tiles_to_process }} \
          --how-many ${{ github.event.inputs.how_many }} \
          --output batch-info)
        
        echo "$BATCH_INFO"
        
        # Extract values from batch info
        TOTAL_TILES=$(echo "$BATCH_INFO" | grep "total_tiles:" | cut -d' ' -f2)
        NUM_BATCHES=$(echo "$BATCH_INFO" | grep "num_batches:" | cut -d' ' -f2)
        
        echo "total-tiles=$TOTAL_TILES" >> $GITHUB_OUTPUT
        
        # Generate batch indices matrix
        BATCH_INDICES=""
        for i in $(seq 0 $((NUM_BATCHES - 1))); do
          BATCH_INDICES="$BATCH_INDICES$i,"
        done
        BATCH_INDICES=${BATCH_INDICES%,}  # Remove trailing comma
        
        BATCH_MATRIX="{\"batch-index\": [$BATCH_INDICES]}"
        echo "matrix=$BATCH_MATRIX" >> $GITHUB_OUTPUT
        
        echo "ðŸš€ Processing $TOTAL_TILES tiles across $NUM_BATCHES batches"
        echo "ðŸ“Š Each batch will process up to 256 tiles"

  process-batch:
    needs: generate-batch-matrix
    if: fromJson(needs.generate-batch-matrix.outputs.total-tiles) > 0
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-batch-matrix.outputs.batch-matrix) }}
    uses: ./.github/workflows/process_batch_small.yml
    with:
      which_tiles_to_process: ${{ inputs.which_tiles_to_process }}
      how_many: ${{ inputs.how_many }}
      config_file: ${{ inputs.config_file }}
      batch_index: ${{ matrix.batch-index }}
    secrets: inherit
